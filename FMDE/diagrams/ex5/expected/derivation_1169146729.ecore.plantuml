@startuml
skinparam shadowing false
hide members
hide circle
class "L.Board"
class "L.L : List"
class "L.C : Card"
class "L.L_ : List"
"L.Board"-->"L.L : List" : "lists"
"L.Board"-->"L.L_ : List" : "lists"
"L.L : List"-->"L.C : Card" : "cards"
"L.L : List"-->"L.L_ : List" : "next"
class "K.Board"
class "K.L : List"
class "K.L_ : List"
class "K.C : Card"
"K.Board"-->"K.L : List" : "lists"
"K.Board"-->"K.L_ : List" : "lists"
"K.L : List"-->"K.L_ : List" : "next"
class "R.Board"
class "R.L : List"
class "R.L_ : List"
class "R.C : Card"
"R.Board"-->"R.L : List" : "lists"
"R.Board"-->"R.L_ : List" : "lists"
"R.L : List"-->"R.L_ : List" : "next"
"R.L_ : List"-->"R.C : Card" : "cards"
class "G.Board"
class "G.i : List"
class "G.j : List"
class "G.x : Card"
class "G.k : List"
class "G.y : Card"
"G.Board"-->"G.i : List" : "lists"
"G.Board"-->"G.j : List" : "lists"
"G.Board"-->"G.k : List" : "lists"
"G.j : List"-->"G.i : List" : "previous"
"G.j : List"-->"G.x : Card" : "cards"
"G.j : List"-->"G.k : List" : "next"
"G.k : List"-->"G.y : Card" : "cards"
class "D.i : List"
class "D.y : Card"
class "D.k : List"
class "D.Board"
class "D.x : Card"
class "D.j : List"
"D.Board"-->"D.i : List" : "lists"
"D.j : List"-->"D.i : List" : "previous"
"D.k : List"-->"D.y : Card" : "cards"
"D.Board"-->"D.j : List" : "lists"
"D.Board"-->"D.k : List" : "lists"
"D.j : List"-->"D.k : List" : "next"
class "r;vert==d;horiz.i : List"
class "r;vert==d;horiz.y : Card"
class "r;vert==d;horiz.k : List"
class "r;vert==d;horiz.Board"
class "r;vert==d;horiz.x : Card"
class "r;vert==d;horiz.j : List"
"r;vert==d;horiz.Board"-->"r;vert==d;horiz.i : List" : "lists"
"r;vert==d;horiz.j : List"-->"r;vert==d;horiz.i : List" : "previous"
"r;vert==d;horiz.k : List"-->"r;vert==d;horiz.y : Card" : "cards"
"r;vert==d;horiz.Board"-->"r;vert==d;horiz.j : List" : "lists"
"r;vert==d;horiz.Board"-->"r;vert==d;horiz.k : List" : "lists"
"r;vert==d;horiz.j : List"-->"r;vert==d;horiz.k : List" : "next"
"r;vert==d;horiz.k : List"-->"r;vert==d;horiz.x : Card" : "cards"
"K.Board" --> "L.Board" : "l"
"K.L : List" --> "L.L : List" : "l"
"K.L_ : List" --> "L.L_ : List" : "l"
"K.C : Card" --> "L.C : Card" : "l"
"K.Board" --> "R.Board" : "r"
"K.L : List" --> "R.L : List" : "r"
"K.L_ : List" --> "R.L_ : List" : "r"
"K.C : Card" --> "R.C : Card" : "r"
"L.Board" --> "G.Board" : "m"
"L.L : List" --> "G.j : List" : "m"
"L.C : Card" --> "G.x : Card" : "m"
"L.L_ : List" --> "G.k : List" : "m"
"K.Board" --> "D.Board" : "d"
"K.L : List" --> "D.j : List" : "d"
"K.L_ : List" --> "D.k : List" : "d"
"K.C : Card" --> "D.x : Card" : "d"
"D.i : List" --> "G.i : List" : "l'"
"D.y : Card" --> "G.y : Card" : "l'"
"D.k : List" --> "G.k : List" : "l'"
"D.Board" --> "G.Board" : "l'"
"D.x : Card" --> "G.x : Card" : "l'"
"D.j : List" --> "G.j : List" : "l'"
"D.i : List" --> "r;vert==d;horiz.i : List" : "horiz;r;vert==d;horiz"
"D.y : Card" --> "r;vert==d;horiz.y : Card" : "horiz;r;vert==d;horiz"
"D.k : List" --> "r;vert==d;horiz.k : List" : "horiz;r;vert==d;horiz"
"D.Board" --> "r;vert==d;horiz.Board" : "horiz;r;vert==d;horiz"
"D.x : Card" --> "r;vert==d;horiz.x : Card" : "horiz;r;vert==d;horiz"
"D.j : List" --> "r;vert==d;horiz.j : List" : "horiz;r;vert==d;horiz"
"R.Board" --> "r;vert==d;horiz.Board" : "vert;r;vert==d;horiz"
"R.L : List" --> "r;vert==d;horiz.j : List" : "vert;r;vert==d;horiz"
"R.L_ : List" --> "r;vert==d;horiz.k : List" : "vert;r;vert==d;horiz"
"R.C : Card" --> "r;vert==d;horiz.x : Card" : "vert;r;vert==d;horiz"
@enduml
